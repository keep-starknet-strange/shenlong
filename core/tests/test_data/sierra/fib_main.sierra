type felt = felt;
type NonZero<felt> = NonZero<felt>;
type Unit = Struct<ut@Tuple>;

libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc dup<felt> = dup<felt>;
libfunc felt_is_zero = felt_is_zero;
libfunc branch_align = branch_align;
libfunc drop<felt> = drop<felt>;
libfunc store_temp<felt> = store_temp<felt>;
libfunc jump = jump;
libfunc drop<NonZero<felt>> = drop<NonZero<felt>>;
libfunc felt_add = felt_add;
libfunc felt_const<1> = felt_const<1>;
libfunc felt_sub = felt_sub;
libfunc rename<felt> = rename<felt>;
libfunc function_call<user@fib::fib::fib> = function_call<user@fib::fib::fib>;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc store_temp<Unit> = store_temp<Unit>;
libfunc rename<Unit> = rename<Unit>;
libfunc function_call<user@fib::fib::empty> = function_call<user@fib::fib::empty>;
libfunc drop<Unit> = drop<Unit>;
libfunc felt_const<2> = felt_const<2>;
libfunc felt_const<3> = felt_const<3>;

revoke_ap_tracking() -> ();
dup<felt>([2]) -> ([2], [3]);
felt_is_zero([3]) { fallthrough() 8([4]) };
branch_align() -> ();
drop<felt>([1]) -> ();
drop<felt>([2]) -> ();
store_temp<felt>([0]) -> ([5]);
jump() { 21() };
branch_align() -> ();
drop<NonZero<felt>>([4]) -> ();
dup<felt>([1]) -> ([1], [7]);
felt_add([0], [7]) -> ([6]);
felt_const<1>() -> ([8]);
felt_sub([2], [8]) -> ([9]);
store_temp<felt>([1]) -> ([11]);
store_temp<felt>([6]) -> ([6]);
rename<felt>([6]) -> ([12]);
store_temp<felt>([9]) -> ([9]);
rename<felt>([9]) -> ([13]);
function_call<user@fib::fib::fib>([11], [12], [13]) -> ([10]);
rename<felt>([10]) -> ([5]);
rename<felt>([5]) -> ([14]);
return([14]);
drop<felt>([0]) -> ();
struct_construct<Unit>() -> ([1]);
store_temp<Unit>([1]) -> ([1]);
rename<Unit>([1]) -> ([2]);
return([2]);
revoke_ap_tracking() -> ();
drop<felt>([0]) -> ();
felt_const<1>() -> ([1]);
store_temp<felt>([1]) -> ([3]);
function_call<user@fib::fib::empty>([3]) -> ([2]);
drop<Unit>([2]) -> ();
felt_const<1>() -> ([4]);
felt_const<2>() -> ([5]);
felt_const<3>() -> ([6]);
store_temp<felt>([4]) -> ([8]);
store_temp<felt>([5]) -> ([9]);
store_temp<felt>([6]) -> ([10]);
function_call<user@fib::fib::fib>([8], [9], [10]) -> ([7]);
rename<felt>([7]) -> ([11]);
return([11]);

fib::fib::fib@0([0]: felt, [1]: felt, [2]: felt) -> (felt);
fib::fib::empty@23([0]: felt) -> (Unit);
fib::fib::main@28([0]: felt) -> (felt);